// This file is generated by Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow to suggest a summary of common roadside issues using AI.
 *
 * - suggestIssueSummary - A function that takes a description of the issue and returns a suggested summary.
 * - SuggestIssueSummaryInput - The input type for the suggestIssueSummary function.
 * - SuggestIssueSummaryOutput - The output type for the suggestIssueSummary function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestIssueSummaryInputSchema = z.object({
  issueDescription: z
    .string()
    .describe('A description of the roadside issue experienced by the user.'),
});
export type SuggestIssueSummaryInput = z.infer<typeof SuggestIssueSummaryInputSchema>;

const SuggestIssueSummaryOutputSchema = z.object({
  suggestedSummary: z
    .string()
    .describe('A suggested summary of the roadside issue, e.g., "Flat tire", "Dead battery", etc.'),
});
export type SuggestIssueSummaryOutput = z.infer<typeof SuggestIssueSummaryOutputSchema>;

export async function suggestIssueSummary(
  input: SuggestIssueSummaryInput
): Promise<SuggestIssueSummaryOutput> {
  return suggestIssueSummaryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestIssueSummaryPrompt',
  input: {schema: SuggestIssueSummaryInputSchema},
  output: {schema: SuggestIssueSummaryOutputSchema},
  prompt: `You are an AI assistant designed to help users quickly summarize their roadside assistance issues.

  Based on the user's description of their issue, suggest a short summary of the problem. The summary should be one of the common roadside issues, such as "Flat tire", "Dead battery", "Engine failure", "Lockout", "Fuel delivery", etc.

  User's description: {{{issueDescription}}}

  Suggested summary: `,
});

const suggestIssueSummaryFlow = ai.defineFlow(
  {
    name: 'suggestIssueSummaryFlow',
    inputSchema: SuggestIssueSummaryInputSchema,
    outputSchema: SuggestIssueSummaryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
